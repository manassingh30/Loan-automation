<Activity mc:Ignorable="sap sap2010" x:Class="_20_b_Data_Extraction" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="idictAsset" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="istrPdfData" Type="InArgument(x:String)" />
    <x:Property Name="idtLogFile" Type="InArgument(sd:DataTable)" />
    <x:Property Name="idtExtractedData" Type="InArgument(sd:DataTable)" />
    <x:Property Name="idtTaxCode" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>_20_b_Data_Extraction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>NPOI.Core</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="_20_b_Data_Extraction" sap:VirtualizedContainerService.HintSize="825.6000000000001,1324" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch - In data extraction" sap:VirtualizedContainerService.HintSize="452.8,1300.8" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <TryCatch.Try>
        <Sequence DisplayName="Sequence - Data extraction" sap:VirtualizedContainerService.HintSize="451.2,872.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="strJsonFile" />
            <Variable x:TypeArguments="njl:JObject" Name="jobjRegex" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ReadTextFile File="{x:Null}" Content="[strJsonFile]" DisplayName="Read Text File - Json file" FileName="[idictAsset(&quot;ASS02 - Json file path&quot;)]" sap:VirtualizedContainerService.HintSize="417.6,112.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
          <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON - Json file" sap:VirtualizedContainerService.HintSize="417.6,122.4" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[jobjRegex]" JsonString="[strJsonFile]" />
          <TryCatch DisplayName="Try Catch - Invoke code" sap:VirtualizedContainerService.HintSize="417.6,410.4" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <TryCatch.Try>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim match As System.Text.RegularExpressions.Match&#xA;Dim strVariable As System.String&#xA;For Each varName As Newtonsoft.Json.Linq.JProperty In ijobjRegex.Item(istrInvoiceSource)&#xA;&#x9;Dim varObjects As Newtonsoft.Json.Linq.JToken = varName.Value&#xA;&#x9;For Each i As Newtonsoft.Json.Linq.JProperty In varObjects&#xA;&#x9;&#x9;Dim varRegexList As Newtonsoft.Json.Linq.JToken = i.Value&#xA;&#x9;&#x9;Dim intCount As Int32=1&#xA;&#x9;&#x9;For Each  regex As Newtonsoft.Json.Linq.JToken In varRegexList.Children()&#xA;&#x9;&#x9;&#x9;Dim regexMatch As New System.Text.RegularExpressions.Regex(regex.ToString)&#xA;&#x9;&#x9;&#x9;&#x9;For Each M As System.Text.RegularExpressions.Match In regexMatch.Matches(istrPdfText)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Dim strFirstName As System.String = If(M.Groups(&quot;FirstName&quot;).Success, M.Groups(&quot;FirstName&quot;).Value,String.Empty)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Dim strLastName As System.String = If(M.Groups(&quot;LastName&quot;).Success, M.Groups(&quot;LastName&quot;).Value, String.Empty)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Dim strEmail As System.String = If(M.Groups(&quot;Email&quot;).Success, M.Groups(&quot;Email&quot;).Value,String.Empty)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Dim strAge As System.String = If(M.Groups(&quot;Age&quot;).Success, M.Groups(&quot;Age&quot;).Value, String.Empty)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Dim strLoanAmount As System.String = If(M.Groups(&quot;LoanAmount&quot;).Success, M.Groups(&quot;LoanAmount&quot;).Value, String.Empty)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Dim strIncomeWithTax As System.String = If(M.Groups(&quot;IncomeWithTax&quot;).Success, M.Groups(&quot;IncomeWithTax&quot;).Value, String.Empty)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Dim strLoanTerm As System.String = If(M.Groups(&quot;LoanTerm&quot;).Success, M.Groups(&quot;LoanTerm&quot;).Value, String.Empty)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Dim strAccountType As System.String = If(M.Groups(&quot;AccountType&quot;).Success, M.Groups(&quot;AccountType&quot;).Value, String.Empty)&#xA;&#x9;&#x9;&#x9;&#x9;iodtDetailedInvoice.rows.Add(strFirstName,strLastName,strEmail,strAge,strLoanAmount,strIncomeWithTax,strLoanTerm,strAccountType)&#xA;&#x9;&#x9;&#x9;&#x9;Next&#xA;        Next&#xA;&#x9;Next&#xA;Next" DisplayName="Invoke Code - To get regex" sap:VirtualizedContainerService.HintSize="416,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                <ui:InvokeCode.Arguments>
                  <InArgument x:TypeArguments="njl:JObject" x:Key="ijobjRegex">[jobjRegex]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="istrPdfText">[istrPdfData]</InArgument>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="iodtDetailedInvoice">[idtExtractedData]</InOutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="istrInvoiceSource">All Data</InArgument>
                </ui:InvokeCode.Arguments>
              </ui:InvokeCode>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body - Throw error" sap:VirtualizedContainerService.HintSize="416,24.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(&quot;error in invoke code&quot;)]" sap:VirtualizedContainerService.HintSize="382.4,113.6" sap2010:WorkflowViewState.IdRef="Throw_1" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
            <TryCatch.Finally>
              <Sequence DisplayName="Finally - Do nothng" sap:VirtualizedContainerService.HintSize="416,24.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </TryCatch.Finally>
          </TryCatch>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="20.c Process on data - Invoke Workflow File (20. Processing\20.c Process on data.xaml)" sap:VirtualizedContainerService.HintSize="417.6,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="20. Processing\20.c Process on data.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="idtLogFile">[idtLogFile]</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="idictAsset">[idictAsset]</InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="idtExtractedData">[idtExtractedData]</InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="idtTaxCode">[idtTaxCode]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body - Throw exception" sap:VirtualizedContainerService.HintSize="451.2,173.6" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Throw DisplayName="Throw - Bre" Exception="[new BusinessRuleException(&quot;error in data extraction&quot;)]" sap:VirtualizedContainerService.HintSize="417.6,113.6" sap2010:WorkflowViewState.IdRef="Throw_2" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Finally - Do nothing" sap:VirtualizedContainerService.HintSize="451.2,89.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>